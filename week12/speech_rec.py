import re
import serial
import speech_recognition as sr

# ================== Serial Setup ==================
# ‚ö†Ô∏è ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô COM5 ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏û‡∏≠‡∏£‡πå‡∏ï ESP32 ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
ser = serial.Serial("COM3", 9600, timeout=0.6)

# ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏•‡∏Ç‡πÑ‡∏ó‡∏¢‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏•‡∏Ç‡∏≠‡∏≤‡∏£‡∏ö‡∏¥‡∏Å ‡πÄ‡∏ä‡πà‡∏ô ‡πô‡πê -> 90
THAI_DIGITS = str.maketrans("‡πê‡πë‡πí‡πì‡πî‡πï‡πñ‡πó‡πò‡πô", "0123456789")

# ‚Äú‡πÇ‡∏´‡∏°‡∏î 5 ‡∏°‡∏∏‡∏°‚Äù ‚Äî ‡πÄ‡∏ã‡πá‡∏ï‡∏°‡∏∏‡∏°‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô
ALLOWED_ANGLES = [0, 45, 90, 135, 180]

def normalize_text(s: str) -> str:
    """‡∏ï‡∏±‡∏î‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á‡∏ã‡πâ‡∏≥ ‡πÜ ‡πÅ‡∏•‡∏∞‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏•‡∏Ç‡πÑ‡∏ó‡∏¢‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏≤‡∏£‡∏ö‡∏¥‡∏Å"""
    s = re.sub(r"\s+", " ", s.strip())
    return s.translate(THAI_DIGITS)

def parse_angle(cmd: str):
    """‡∏î‡∏∂‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏°‡∏∏‡∏°‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á ‡∏ó‡∏±‡πâ‡∏á‡πÑ‡∏ó‡∏¢‡πÅ‡∏•‡∏∞‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©"""
    # ‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©
    m = re.search(r"\b(?:rotate|turn)\s*(?:to\s*)?(\d{1,3})\s*(?:degree|degrees)?\b", cmd, re.I)
    if not m:
        # ‡πÑ‡∏ó‡∏¢
        m = re.search(r"(?:‡∏™‡∏±‡πà‡∏á‡∏á‡∏≤‡∏ô\s*)?‡∏´‡∏°‡∏∏‡∏ô(?:‡∏°‡∏≠‡πÄ‡∏ï‡∏≠‡∏£‡πå)?(?:‡πÑ‡∏õ‡∏ó‡∏µ‡πà|‡∏ó‡∏µ‡πà)?\s*(\d{1,3})", cmd)
    if not m:
        return None

    angle = int(m.group(1))
    return max(0, min(180, angle))  # ‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ã‡∏≠‡∏£‡πå‡πÇ‡∏ß 0..180

r = sr.Recognizer()
with sr.Microphone() as mic:
    r.adjust_for_ambient_noise(mic, duration=0.6)
    print("‡∏û‡∏π‡∏î‡∏Ç‡∏∂‡πâ‡∏ô‡∏ï‡πâ‡∏ô‡∏ß‡πà‡∏≤ '‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ' ‡πÅ‡∏•‡πâ‡∏ß‡∏ï‡∏≤‡∏°‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á ‡πÄ‡∏ä‡πà‡∏ô '‡∏™‡∏±‡πà‡∏á‡∏á‡∏≤‡∏ô ‡∏´‡∏°‡∏∏‡∏ô 90' ‡∏´‡∏£‡∏∑‡∏≠ 'Rotate 90 degrees'")

    while True:
        try:
            audio = r.listen(mic, timeout=6, phrase_time_limit=10)
            text = r.recognize_google(audio, language="th-TH")
            print("‡πÑ‡∏î‡πâ‡∏¢‡∏¥‡∏ô:", text)

            tnorm = normalize_text(text)

            if tnorm.startswith("‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ"):
                cmd = tnorm.replace("‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ", "", 1).strip()

                # ----------- ‡πÇ‡∏´‡∏°‡∏î ‚Äú5 ‡∏°‡∏∏‡∏°‚Äù -----------
                if re.search(r"\b5\s*‡∏°‡∏∏‡∏°\b", cmd) or re.search(r"\bfive\s*angles\b", cmd, re.I):
                    for a in ALLOWED_ANGLES:
                        msg = f"ROTATE:{a}\n"
                        ser.write(msg.encode())
                        print("‡∏™‡πà‡∏á:", msg.strip())
                    continue

                # ----------- ‡πÇ‡∏´‡∏°‡∏î‡∏õ‡∏Å‡∏ï‡∏¥ -----------
                angle = parse_angle(cmd)
                if angle is not None:
                    nearest = min(ALLOWED_ANGLES, key=lambda a: abs(a - angle))
                    msg = f"ROTATE:{nearest}\n"
                    ser.write(msg.encode())
                    print("‡∏™‡πà‡∏á:", msg.strip())
                else:
                    print("‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏´‡∏°‡∏∏‡∏ô ‡∏•‡∏≠‡∏á‡∏û‡∏π‡∏î‡∏ß‡πà‡∏≤ '‡∏™‡∏±‡πà‡∏á‡∏á‡∏≤‡∏ô ‡∏´‡∏°‡∏∏‡∏ô 90' ‡∏´‡∏£‡∏∑‡∏≠ 'Rotate 90 degrees'")
            else:
                print("‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏î‡πâ‡∏ß‡∏¢ '‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ' ‡∏Å‡πà‡∏≠‡∏ô‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö üòâ")

        except sr.WaitTimeoutError:
            print("‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏û‡∏π‡∏î‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤‡πÄ‡∏•‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö")
        except sr.UnknownValueError:
            print("‡∏ü‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ä‡∏±‡∏î‡∏Ñ‡∏£‡∏±‡∏ö ‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‚Ä¶")
        except Exception as e:
            print("Error:", e)